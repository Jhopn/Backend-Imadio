generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                String              @id @default(uuid())
  name              String
  email             String              @unique
  password          String
  role              Role                @default(USER)
  HistoryConversion HistoryConversion[]
  TokenRedefinition TokenRedefinition[]
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")
  Settings          Settings?
}

model HistoryConversion {
  id            String   @id @default(uuid())
  userId        String   @map("user_id")
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  convertedText String   @map("converted_text")
  imageUrl      String   @map("image_url")
  publicId      String   @map("public_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
}

model Settings {
  id     String @id @default(uuid())
  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  themeColor String  @map("theme_color")
  fontSize String  @map("font_size")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
}

model TokenRedefinition{
  id String @id @default(uuid())
  userId String @map("user_id")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  token String
  used Boolean @default(false)
  createdAt     DateTime @default(now()) @map("created_at")
  expirationAt     DateTime @map("expiration_at")
}